
case2:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 83 01 00 00       	call   1190 <__x86.get_pc_thunk.bx>
    100d:	81 c3 b3 2f 00 00    	add    $0x2fb3,%ebx
    1013:	8b 83 34 00 00 00    	mov    0x34(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	0f 1f 40 00          	nopl   0x0(%eax)
    1040:	f3 0f 1e fb          	endbr32 
    1044:	68 00 00 00 00       	push   $0x0
    1049:	e9 e2 ff ff ff       	jmp    1030 <.plt>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fb          	endbr32 
    1054:	68 08 00 00 00       	push   $0x8
    1059:	e9 d2 ff ff ff       	jmp    1030 <.plt>
    105e:	66 90                	xchg   %ax,%ax
    1060:	f3 0f 1e fb          	endbr32 
    1064:	68 10 00 00 00       	push   $0x10
    1069:	e9 c2 ff ff ff       	jmp    1030 <.plt>
    106e:	66 90                	xchg   %ax,%ax
    1070:	f3 0f 1e fb          	endbr32 
    1074:	68 18 00 00 00       	push   $0x18
    1079:	e9 b2 ff ff ff       	jmp    1030 <.plt>
    107e:	66 90                	xchg   %ax,%ax
    1080:	f3 0f 1e fb          	endbr32 
    1084:	68 20 00 00 00       	push   $0x20
    1089:	e9 a2 ff ff ff       	jmp    1030 <.plt>
    108e:	66 90                	xchg   %ax,%ax
    1090:	f3 0f 1e fb          	endbr32 
    1094:	68 28 00 00 00       	push   $0x28
    1099:	e9 92 ff ff ff       	jmp    1030 <.plt>
    109e:	66 90                	xchg   %ax,%ax
    10a0:	f3 0f 1e fb          	endbr32 
    10a4:	68 30 00 00 00       	push   $0x30
    10a9:	e9 82 ff ff ff       	jmp    1030 <.plt>
    10ae:	66 90                	xchg   %ax,%ax
    10b0:	f3 0f 1e fb          	endbr32 
    10b4:	68 38 00 00 00       	push   $0x38
    10b9:	e9 72 ff ff ff       	jmp    1030 <.plt>
    10be:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

000010c0 <__cxa_finalize@plt>:
    10c0:	f3 0f 1e fb          	endbr32 
    10c4:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
    10ca:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .plt.sec:

000010d0 <printf@plt>:
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    10da:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010e0 <__stack_chk_fail@plt>:
    10e0:	f3 0f 1e fb          	endbr32 
    10e4:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    10ea:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010f0 <perror@plt>:
    10f0:	f3 0f 1e fb          	endbr32 
    10f4:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    10fa:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001100 <fread@plt>:
    1100:	f3 0f 1e fb          	endbr32 
    1104:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    110a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001110 <puts@plt>:
    1110:	f3 0f 1e fb          	endbr32 
    1114:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    111a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001120 <__libc_start_main@plt>:
    1120:	f3 0f 1e fb          	endbr32 
    1124:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    112a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001130 <fopen@plt>:
    1130:	f3 0f 1e fb          	endbr32 
    1134:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
    113a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001140 <__isoc99_scanf@plt>:
    1140:	f3 0f 1e fb          	endbr32 
    1144:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
    114a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .text:

00001150 <_start>:
    1150:	f3 0f 1e fb          	endbr32 
    1154:	31 ed                	xor    %ebp,%ebp
    1156:	5e                   	pop    %esi
    1157:	89 e1                	mov    %esp,%ecx
    1159:	83 e4 f0             	and    $0xfffffff0,%esp
    115c:	50                   	push   %eax
    115d:	54                   	push   %esp
    115e:	52                   	push   %edx
    115f:	e8 22 00 00 00       	call   1186 <_start+0x36>
    1164:	81 c3 5c 2e 00 00    	add    $0x2e5c,%ebx
    116a:	8d 83 60 d4 ff ff    	lea    -0x2ba0(%ebx),%eax
    1170:	50                   	push   %eax
    1171:	8d 83 f0 d3 ff ff    	lea    -0x2c10(%ebx),%eax
    1177:	50                   	push   %eax
    1178:	51                   	push   %ecx
    1179:	56                   	push   %esi
    117a:	ff b3 38 00 00 00    	pushl  0x38(%ebx)
    1180:	e8 9b ff ff ff       	call   1120 <__libc_start_main@plt>
    1185:	f4                   	hlt    
    1186:	8b 1c 24             	mov    (%esp),%ebx
    1189:	c3                   	ret    
    118a:	66 90                	xchg   %ax,%ax
    118c:	66 90                	xchg   %ax,%ax
    118e:	66 90                	xchg   %ax,%ax

00001190 <__x86.get_pc_thunk.bx>:
    1190:	8b 1c 24             	mov    (%esp),%ebx
    1193:	c3                   	ret    
    1194:	66 90                	xchg   %ax,%ax
    1196:	66 90                	xchg   %ax,%ax
    1198:	66 90                	xchg   %ax,%ax
    119a:	66 90                	xchg   %ax,%ax
    119c:	66 90                	xchg   %ax,%ax
    119e:	66 90                	xchg   %ax,%ax

000011a0 <deregister_tm_clones>:
    11a0:	e8 e4 00 00 00       	call   1289 <__x86.get_pc_thunk.dx>
    11a5:	81 c2 1b 2e 00 00    	add    $0x2e1b,%edx
    11ab:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
    11b1:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
    11b7:	39 c8                	cmp    %ecx,%eax
    11b9:	74 1d                	je     11d8 <deregister_tm_clones+0x38>
    11bb:	8b 82 2c 00 00 00    	mov    0x2c(%edx),%eax
    11c1:	85 c0                	test   %eax,%eax
    11c3:	74 13                	je     11d8 <deregister_tm_clones+0x38>
    11c5:	55                   	push   %ebp
    11c6:	89 e5                	mov    %esp,%ebp
    11c8:	83 ec 14             	sub    $0x14,%esp
    11cb:	51                   	push   %ecx
    11cc:	ff d0                	call   *%eax
    11ce:	83 c4 10             	add    $0x10,%esp
    11d1:	c9                   	leave  
    11d2:	c3                   	ret    
    11d3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11d7:	90                   	nop
    11d8:	c3                   	ret    
    11d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000011e0 <register_tm_clones>:
    11e0:	e8 a4 00 00 00       	call   1289 <__x86.get_pc_thunk.dx>
    11e5:	81 c2 db 2d 00 00    	add    $0x2ddb,%edx
    11eb:	55                   	push   %ebp
    11ec:	89 e5                	mov    %esp,%ebp
    11ee:	53                   	push   %ebx
    11ef:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
    11f5:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
    11fb:	83 ec 04             	sub    $0x4,%esp
    11fe:	29 c8                	sub    %ecx,%eax
    1200:	89 c3                	mov    %eax,%ebx
    1202:	c1 e8 1f             	shr    $0x1f,%eax
    1205:	c1 fb 02             	sar    $0x2,%ebx
    1208:	01 d8                	add    %ebx,%eax
    120a:	d1 f8                	sar    %eax
    120c:	74 14                	je     1222 <register_tm_clones+0x42>
    120e:	8b 92 3c 00 00 00    	mov    0x3c(%edx),%edx
    1214:	85 d2                	test   %edx,%edx
    1216:	74 0a                	je     1222 <register_tm_clones+0x42>
    1218:	83 ec 08             	sub    $0x8,%esp
    121b:	50                   	push   %eax
    121c:	51                   	push   %ecx
    121d:	ff d2                	call   *%edx
    121f:	83 c4 10             	add    $0x10,%esp
    1222:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1225:	c9                   	leave  
    1226:	c3                   	ret    
    1227:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    122e:	66 90                	xchg   %ax,%ax

00001230 <__do_global_dtors_aux>:
    1230:	f3 0f 1e fb          	endbr32 
    1234:	55                   	push   %ebp
    1235:	89 e5                	mov    %esp,%ebp
    1237:	53                   	push   %ebx
    1238:	e8 53 ff ff ff       	call   1190 <__x86.get_pc_thunk.bx>
    123d:	81 c3 83 2d 00 00    	add    $0x2d83,%ebx
    1243:	83 ec 04             	sub    $0x4,%esp
    1246:	80 bb 48 00 00 00 00 	cmpb   $0x0,0x48(%ebx)
    124d:	75 27                	jne    1276 <__do_global_dtors_aux+0x46>
    124f:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
    1255:	85 c0                	test   %eax,%eax
    1257:	74 11                	je     126a <__do_global_dtors_aux+0x3a>
    1259:	83 ec 0c             	sub    $0xc,%esp
    125c:	ff b3 44 00 00 00    	pushl  0x44(%ebx)
    1262:	e8 59 fe ff ff       	call   10c0 <__cxa_finalize@plt>
    1267:	83 c4 10             	add    $0x10,%esp
    126a:	e8 31 ff ff ff       	call   11a0 <deregister_tm_clones>
    126f:	c6 83 48 00 00 00 01 	movb   $0x1,0x48(%ebx)
    1276:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1279:	c9                   	leave  
    127a:	c3                   	ret    
    127b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    127f:	90                   	nop

00001280 <frame_dummy>:
    1280:	f3 0f 1e fb          	endbr32 
    1284:	e9 57 ff ff ff       	jmp    11e0 <register_tm_clones>

00001289 <__x86.get_pc_thunk.dx>:
    1289:	8b 14 24             	mov    (%esp),%edx
    128c:	c3                   	ret    

0000128d <main>:
    128d:	f3 0f 1e fb          	endbr32 
    1291:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1295:	83 e4 f0             	and    $0xfffffff0,%esp
    1298:	ff 71 fc             	pushl  -0x4(%ecx)
    129b:	55                   	push   %ebp
    129c:	89 e5                	mov    %esp,%ebp
    129e:	53                   	push   %ebx
    129f:	51                   	push   %ecx
    12a0:	83 ec 10             	sub    $0x10,%esp
    12a3:	e8 e8 fe ff ff       	call   1190 <__x86.get_pc_thunk.bx>
    12a8:	81 c3 18 2d 00 00    	add    $0x2d18,%ebx
    12ae:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    12b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    12b7:	31 c0                	xor    %eax,%eax
    12b9:	83 ec 08             	sub    $0x8,%esp
    12bc:	8d 83 48 e0 ff ff    	lea    -0x1fb8(%ebx),%eax
    12c2:	50                   	push   %eax
    12c3:	8d 83 4b e0 ff ff    	lea    -0x1fb5(%ebx),%eax
    12c9:	50                   	push   %eax
    12ca:	e8 61 fe ff ff       	call   1130 <fopen@plt>
    12cf:	83 c4 10             	add    $0x10,%esp
    12d2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    12d5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    12dc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    12e3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
    12e7:	75 1c                	jne    1305 <main+0x78>
    12e9:	83 ec 0c             	sub    $0xc,%esp
    12ec:	8d 83 57 e0 ff ff    	lea    -0x1fa9(%ebx),%eax
    12f2:	50                   	push   %eax
    12f3:	e8 f8 fd ff ff       	call   10f0 <perror@plt>
    12f8:	83 c4 10             	add    $0x10,%esp
    12fb:	b8 00 00 00 00       	mov    $0x0,%eax
    1300:	e9 8d 00 00 00       	jmp    1392 <main+0x105>
    1305:	ff 75 f0             	pushl  -0x10(%ebp)
    1308:	6a 01                	push   $0x1
    130a:	6a 04                	push   $0x4
    130c:	8d 45 ec             	lea    -0x14(%ebp),%eax
    130f:	50                   	push   %eax
    1310:	e8 eb fd ff ff       	call   1100 <fread@plt>
    1315:	83 c4 10             	add    $0x10,%esp
    1318:	8b 45 ec             	mov    -0x14(%ebp),%eax
    131b:	83 ec 08             	sub    $0x8,%esp
    131e:	50                   	push   %eax
    131f:	8d 83 5e e0 ff ff    	lea    -0x1fa2(%ebx),%eax
    1325:	50                   	push   %eax
    1326:	e8 a5 fd ff ff       	call   10d0 <printf@plt>
    132b:	83 c4 10             	add    $0x10,%esp
    132e:	83 ec 0c             	sub    $0xc,%esp
    1331:	8d 83 79 e0 ff ff    	lea    -0x1f87(%ebx),%eax
    1337:	50                   	push   %eax
    1338:	e8 93 fd ff ff       	call   10d0 <printf@plt>
    133d:	83 c4 10             	add    $0x10,%esp
    1340:	83 ec 08             	sub    $0x8,%esp
    1343:	8d 45 e8             	lea    -0x18(%ebp),%eax
    1346:	50                   	push   %eax
    1347:	8d 83 93 e0 ff ff    	lea    -0x1f6d(%ebx),%eax
    134d:	50                   	push   %eax
    134e:	e8 ed fd ff ff       	call   1140 <__isoc99_scanf@plt>
    1353:	83 c4 10             	add    $0x10,%esp
    1356:	8b 45 ec             	mov    -0x14(%ebp),%eax
    1359:	89 45 e8             	mov    %eax,-0x18(%ebp)
    135c:	8b 55 e8             	mov    -0x18(%ebp),%edx
    135f:	8b 45 ec             	mov    -0x14(%ebp),%eax
    1362:	39 c2                	cmp    %eax,%edx
    1364:	74 14                	je     137a <main+0xed>
    1366:	83 ec 0c             	sub    $0xc,%esp
    1369:	8d 83 98 e0 ff ff    	lea    -0x1f68(%ebx),%eax
    136f:	50                   	push   %eax
    1370:	e8 9b fd ff ff       	call   1110 <puts@plt>
    1375:	83 c4 10             	add    $0x10,%esp
    1378:	eb b4                	jmp    132e <main+0xa1>
    137a:	90                   	nop
    137b:	83 ec 0c             	sub    $0xc,%esp
    137e:	8d 83 bc e0 ff ff    	lea    -0x1f44(%ebx),%eax
    1384:	50                   	push   %eax
    1385:	e8 86 fd ff ff       	call   1110 <puts@plt>
    138a:	83 c4 10             	add    $0x10,%esp
    138d:	b8 00 00 00 00       	mov    $0x0,%eax
    1392:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    1395:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
    139c:	74 05                	je     13a3 <main+0x116>
    139e:	e8 8d 00 00 00       	call   1430 <__stack_chk_fail_local>
    13a3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    13a6:	59                   	pop    %ecx
    13a7:	5b                   	pop    %ebx
    13a8:	5d                   	pop    %ebp
    13a9:	8d 61 fc             	lea    -0x4(%ecx),%esp
    13ac:	c3                   	ret    
    13ad:	66 90                	xchg   %ax,%ax
    13af:	90                   	nop

000013b0 <__libc_csu_init>:
    13b0:	f3 0f 1e fb          	endbr32 
    13b4:	55                   	push   %ebp
    13b5:	e8 6b 00 00 00       	call   1425 <__x86.get_pc_thunk.bp>
    13ba:	81 c5 06 2c 00 00    	add    $0x2c06,%ebp
    13c0:	57                   	push   %edi
    13c1:	56                   	push   %esi
    13c2:	53                   	push   %ebx
    13c3:	83 ec 0c             	sub    $0xc,%esp
    13c6:	89 eb                	mov    %ebp,%ebx
    13c8:	8b 7c 24 28          	mov    0x28(%esp),%edi
    13cc:	e8 2f fc ff ff       	call   1000 <_init>
    13d1:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx
    13d7:	8d 85 00 ff ff ff    	lea    -0x100(%ebp),%eax
    13dd:	29 c3                	sub    %eax,%ebx
    13df:	c1 fb 02             	sar    $0x2,%ebx
    13e2:	74 29                	je     140d <__libc_csu_init+0x5d>
    13e4:	31 f6                	xor    %esi,%esi
    13e6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    13ed:	8d 76 00             	lea    0x0(%esi),%esi
    13f0:	83 ec 04             	sub    $0x4,%esp
    13f3:	57                   	push   %edi
    13f4:	ff 74 24 2c          	pushl  0x2c(%esp)
    13f8:	ff 74 24 2c          	pushl  0x2c(%esp)
    13fc:	ff 94 b5 00 ff ff ff 	call   *-0x100(%ebp,%esi,4)
    1403:	83 c6 01             	add    $0x1,%esi
    1406:	83 c4 10             	add    $0x10,%esp
    1409:	39 f3                	cmp    %esi,%ebx
    140b:	75 e3                	jne    13f0 <__libc_csu_init+0x40>
    140d:	83 c4 0c             	add    $0xc,%esp
    1410:	5b                   	pop    %ebx
    1411:	5e                   	pop    %esi
    1412:	5f                   	pop    %edi
    1413:	5d                   	pop    %ebp
    1414:	c3                   	ret    
    1415:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    141c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001420 <__libc_csu_fini>:
    1420:	f3 0f 1e fb          	endbr32 
    1424:	c3                   	ret    

00001425 <__x86.get_pc_thunk.bp>:
    1425:	8b 2c 24             	mov    (%esp),%ebp
    1428:	c3                   	ret    
    1429:	66 90                	xchg   %ax,%ax
    142b:	66 90                	xchg   %ax,%ax
    142d:	66 90                	xchg   %ax,%ax
    142f:	90                   	nop

00001430 <__stack_chk_fail_local>:
    1430:	f3 0f 1e fb          	endbr32 
    1434:	53                   	push   %ebx
    1435:	e8 56 fd ff ff       	call   1190 <__x86.get_pc_thunk.bx>
    143a:	81 c3 86 2b 00 00    	add    $0x2b86,%ebx
    1440:	83 ec 08             	sub    $0x8,%esp
    1443:	e8 98 fc ff ff       	call   10e0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00001448 <_fini>:
    1448:	f3 0f 1e fb          	endbr32 
    144c:	53                   	push   %ebx
    144d:	83 ec 08             	sub    $0x8,%esp
    1450:	e8 3b fd ff ff       	call   1190 <__x86.get_pc_thunk.bx>
    1455:	81 c3 6b 2b 00 00    	add    $0x2b6b,%ebx
    145b:	83 c4 08             	add    $0x8,%esp
    145e:	5b                   	pop    %ebx
    145f:	c3                   	ret    
